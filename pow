#!/bin/sh -e
#
# lapstop - Simple laptop power management.

log() {
    printf '%s\n' "$*"
}

swap() {
    [ "$mode" = bat ] && val=$1 || val=$2

    printf %s "$val" > "$3"

    log Changed "$3" to "$val"
}

main() {
    # Store the desired mode. If empty (no passed arg),
    # exit displaying usage.
    mode=${1:?Usage: ${0##*/} bat|pow}

    # If an invalid mode was given as input, rerun main()
    # with no argument to display the above usage message.
    [ "$mode" = bat ] || [ "$mode" = pow ] ||
       main ""

    log -\> Tweaking virtual memory for "$1"; {
        # Control how often the kernel will swap physical
        # memory to the disk. The higher the value, the
        # more swaps will occur.
        #
        # Leave this set at '10' regardless of power mode.
        # The default is typically '60' for laptop/desktop
        # workloads though '10' is being recommended more
        # and more today.
        #
        # For reference, on server and hypervisor workloads
        # this is usually set to '0'. Users of systems with
        # a good amount of ram and an SSD sometimes set this
        # to '1' to increase the lifespan of the SSD.
        #
        # This has the potential to improve performance
        # though this is on a case-by-case basis and depends
        # on the system and its workloads.
        swap 10 10 /proc/sys/vm/swappiness

        # How often the kernel should write eligible data to
        # the disk (in centiseconds). Setting to '0' disables
        # the periodic writes.
        #
        # The kernel laptop mode patches set this to a value
        # of '6000' by default. This value is (SECONDS * 100)
        # and if the devices loses power, SECONDS amount of
        # data is potentially lost.
        #
        # Various documents, guides or what have you
        # recommend against tweaking this full stop. For the
        # above reason, this is disabled by default.
        # swap 6000 3000 /proc/sys/vm/dirty_expire_centisecs
    }
}

main "$@"
